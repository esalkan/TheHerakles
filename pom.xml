<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.theherakles</groupId>
    <artifactId>TheHerakles</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <selenium.version>4.0.0</selenium.version>
        <webdrivermanager.version>4.1.0</webdrivermanager.version>
        <cucumber-java.version>5.7.0</cucumber-java.version>
        <cucumber-junit.version>5.7.0</cucumber-junit.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-cucumber-reporting.version>5.0.0</maven-cucumber-reporting.version>
    </properties>

    <dependencies>
        <!--
        Selenium / JAVA
            => For browser automation.
        -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>

        <!--
        WebDriverManager / Boni García
            => WebDriverManager is an open-source Java library that carries out the management (i.e., download, setup,
        and maintenance) of the drivers required by Selenium WebDriver (e.g., chromedriver, geckodriver, edge driver,
        etc.) in a fully automated manner.
        -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>${webdrivermanager.version}</version>
        </dependency>

        <!--
        Cucumber / JAVA
            => Cucumber-JVM is the official port for Java. Every Gherkin step is “glued” to a step definition method
            that executes the step.
        -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber-java.version}</version>
        </dependency>

        <!-- Cucumber / JUnit -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber-junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--
            Apache Maven Surefire
                => The Surefire Plugin is used during the test phase of the build lifecycle to execute the
                tests of an application
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <runOrder>Alphabetical</runOrder>
                    <includes>
                        <include>**/*TestsRunner.java</include>
                        <include>**/*FailedTestRunner.java</include>
                    </includes>
                </configuration>
            </plugin>
            <!--
            Publishing pretty cucumber reports with Master thought Plug-in
                => Master-thought library provides pretty html reports for Cucumber.
                It works by generating html from the cucumber json file
            -->
            <plugin>
                <groupId>net.masterthought</groupId>
                <artifactId>maven-cucumber-reporting</artifactId>
                <version>${maven-cucumber-reporting.version}</version>
                <executions>
                    <execution>
                        <id>execution</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <projectName>${artifactId} Cucumber Report</projectName>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <inputDirectory>${project.build.directory}</inputDirectory>
                            <jsonFiles>
                                <param>**/cucumber*.json</param>
                            </jsonFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>